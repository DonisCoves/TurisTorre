package cf.castellon.turistorre.adaptadores;

import android.graphics.drawable.Drawable;
import android.support.annotation.NonNull;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;

import com.firebase.ui.database.FirebaseRecyclerAdapter;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.storage.FileDownloadTask;
import com.google.firebase.storage.StorageReference;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import cf.castellon.turistorre.R;
import cf.castellon.turistorre.bean.Imagen;
import cf.castellon.turistorre.bean.Usuario;

import static cf.castellon.turistorre.utils.Constantes.TAG;
import static cf.castellon.turistorre.utils.Constantes.mDataBaseUsersRef;
import static cf.castellon.turistorre.utils.Constantes.mStorageImgRef;

public class MyFireBaseAdapterRecycleView2 extends FirebaseRecyclerAdapter<Imagen,MyFireBaseAdapterRecycleView2.MyFireViewHolder> {
    private int cont,cont2;
    private List <File>filesImg;

    public MyFireBaseAdapterRecycleView2(Class<Imagen> modelClass, int modelLayout, Class<MyFireViewHolder> viewHolderClass, DatabaseReference ref) {
        super(modelClass, modelLayout, viewHolderClass, ref);
    }

    @Override
    protected void populateViewHolder(final MyFireViewHolder viewHolder, final Imagen modelo, int position) {
            cont = 0;
            cont2 = 0;
            filesImg = new ArrayList<File>();

            mDataBaseUsersRef.child(modelo.getUidUser()).addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(DataSnapshot dataSnapshot) {
                    File fileImg;
                    Usuario user = dataSnapshot.getValue(Usuario.class);
                    StorageReference mStorageRef = mStorageImgRef.child(user.nombre + " - " + modelo.getUidUser()).child(modelo.getUidImagen());
                    try {
                        fileImg = File.createTempFile("images", "jpg");
                        filesImg.add(cont, fileImg);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    mStorageRef.getFile(filesImg.get(cont))
                            .addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                                @Override
                                public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {
                                    Log.d(TAG,"Imagen "+cont2+" bajada con exito");
                                    viewHolder.bindDatos(filesImg.get(cont2++).getAbsolutePath(),cont2);
                                }
                            })
                            .addOnFailureListener(new OnFailureListener() {
                                @Override
                                public void onFailure(@NonNull Exception e) {
                                    Log.e("addOnFailureListener", e.getMessage());
                                }
                            })
                    /*.addOnProgressListener(new OnProgressListener<FileDownloadTask.TaskSnapshot>() {
                        @Override
                        public void onProgress(FileDownloadTask.TaskSnapshot taskSnapshot) {
                            double progress = (100.0 * taskSnapshot.getBytesTransferred()) / taskSnapshot.getTotalByteCount();
                            Log.d(TAG,"Bajando fichero nÂº" + cont2 + " " + progress + "% done");
                        }
                    })*/;

                }

                @Override
                public void onCancelled(DatabaseError databaseError) {

                }
            });
    }

    /** Clase ViewHolder interna */
    public static class MyFireViewHolder extends RecyclerView.ViewHolder {
        int cont3;
        private ImageView imageView;
        public MyFireViewHolder(View itemView) {
            super(itemView);
            imageView = (ImageView)itemView.findViewById(R.id.ivFilaRecycle);
        }

        public void bindDatos(String fileName,int cont){
            int cont2=cont-1;
            Log.d(TAG," bindDatos ANTES"+cont2+" bajada con exito");
            Drawable drawable = Drawable.createFromPath(fileName);
            imageView.setImageDrawable(drawable);
            Log.d(TAG," bindDatos DESPUES"+cont2+" bajada con exito");

        }

    }
}